[{"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\index.js":"1","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\App.js":"2","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\EditListing\\EditListing.js":"3","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Listing\\Listing.js":"4","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\CreateListing\\CreateListing.js":"5","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Layout\\Layout.js":"6","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Login\\Login.js":"7","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\MyStuff\\MyStuff.js":"8","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ViewListings\\ViewListings.js":"9","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\AppBar\\MyAppBar.js":"10","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\BookingDrawer\\BookingDrawer.js":"11","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ListingsCard\\ListingsCard.js":"12","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\CreateAccount\\CreateAccount.js":"13","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Contexts\\UserContext\\UserContext.js":"14","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ImageUpload\\ImageUpload.js":"15","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\MyListings\\MyListings.js":"16","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\UpcomingStays\\UpcomingStays.js":"17","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\Favorites\\Favorites.js":"18","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\PastStays\\PastStays.js":"19"},{"size":384,"mtime":1678315181935,"results":"20","hashOfConfig":"21"},{"size":1978,"mtime":1680543648138,"results":"22","hashOfConfig":"21"},{"size":14337,"mtime":1681235457796,"results":"23","hashOfConfig":"21"},{"size":14098,"mtime":1681230699100,"results":"24","hashOfConfig":"21"},{"size":12937,"mtime":1681233597893,"results":"25","hashOfConfig":"21"},{"size":227,"mtime":1678314693646,"results":"26","hashOfConfig":"21"},{"size":5582,"mtime":1680639625995,"results":"27","hashOfConfig":"21"},{"size":9011,"mtime":1681230699140,"results":"28","hashOfConfig":"21"},{"size":10420,"mtime":1680727107289,"results":"29","hashOfConfig":"21"},{"size":4349,"mtime":1680818210854,"results":"30","hashOfConfig":"21"},{"size":0,"mtime":1678486753333,"results":"31","hashOfConfig":"21"},{"size":1964,"mtime":1681230699101,"results":"32","hashOfConfig":"21"},{"size":8915,"mtime":1680544970113,"results":"33","hashOfConfig":"21"},{"size":87,"mtime":1679597029320,"results":"34","hashOfConfig":"21"},{"size":458,"mtime":1680202785344,"results":"35","hashOfConfig":"21"},{"size":718,"mtime":1680541448977,"results":"36","hashOfConfig":"21"},{"size":999,"mtime":1680823417685,"results":"37","hashOfConfig":"21"},{"size":498,"mtime":1680541427529,"results":"38","hashOfConfig":"21"},{"size":1519,"mtime":1680542385394,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"kduin",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\index.js",[],[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\App.js",["102"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\EditListing\\EditListing.js",["103","104","105","106","107","108","109","110","111"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Listing\\Listing.js",["112","113","114","115","116","117","118","119","120","121"],[],"import { Divider, Typography } from \"@mui/material\";\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Rating from '@mui/material/Rating';\r\nimport dayjs from \"dayjs\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport Modal from '@mui/material/Modal';\r\nimport Box from '@mui/material/Box';\r\nimport { UserContext } from \"../../Contexts/UserContext/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\n\r\nexport default function Listing(){\r\n\r\nconst api = `https://localhost:44305`;\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    borderRadius:3,\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nconst {id} = useParams();\r\nconst [listingLoaded, setListingLoaded] = useState(false);\r\nconst {user, setUser, isLoggedIn, setIsLoggedIn} = useContext(UserContext);\r\nconst [listing, setListing] = useState();\r\nconst [drawerOpen, setDrawerOpen] = useState(false);\r\nconst [checkin, setCheckin] = useState('');\r\nconst [checkout, setCheckout] = useState('');\r\nconst [failBooking, setFailBooking] = useState(false);\r\nconst [failBookingMessage, setFailBookingMessage] = useState('');\r\nconst [modalOpen, setModalOpen] = useState(false);\r\nconst [requiresLogin, setRequiresLogin] = useState(false);\r\nconst [loginErrorMessage, setLoginErrorMessage] = useState('');\r\nconst [addToFavorites, setAddtoFavorites] = useState(false);\r\n\r\n//whereas some pages rely on user existing to render at all, this page relies on isloggedin to render conditionally.\r\n//That's why the verify login method is different. No re-routing occurs, just setting of isloggedin.\r\n\r\nconst getUser = (id) => {\r\n\r\n    fetch(`${api}/bnb/user/${id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n        setUser(data.user);\r\n    })\r\n    .then(() => {\r\n        setIsLoggedIn(true);\r\n    });\r\n}\r\n\r\nconst verifyLogin = () => {\r\n\r\n    if(!user){\r\n        //if user is null, parse the cookie. If there's no cookie, id will be NaN. So, either get user by Id if Id has value, or reroute to login.\r\n        var elements = document.cookie.split('=');\r\n        var id = Number(elements[1]);\r\n\r\n        if(!isNaN(id)){\r\n            getUser(id);\r\n        }\r\n        else{\r\n            setIsLoggedIn(false);\r\n        }\r\n    }\r\n    else{\r\n        if(dayjs().isAfter(dayjs(user.logTime).add(6, 'hour'))){\r\n            setIsLoggedIn(false);\r\n        }\r\n        else{ \r\n            setIsLoggedIn(true);\r\n        }\r\n    } \r\n}\r\nuseEffect(() => {\r\n    verifyLogin();\r\n}, []);\r\n\r\nconst getListing = () => {\r\n\r\n    fetch(`${api}/bnb/listing/${id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n        debugger;\r\n        setListing(data.listing);\r\n        console.log(data);\r\n    })\r\n    .then(() => {\r\n        setListingLoaded(true);\r\n    });\r\n}\r\n  useEffect(() => {\r\n    getListing();\r\n}, []);\r\n\r\n\r\nconst showListingAmenities = () => {\r\n    \r\n    return listing.amenities.map(function(val, index){\r\n        return(      \r\n            <ListItem key={index}>\r\n                • {val}\r\n            </ListItem>           \r\n        )        \r\n    })\r\n}\r\nconst showBookingDrawer = () => {\r\n\r\n    const isDisabled = (date) => {\r\n\r\n        for(let i = 0; i < listing.stays.length; i++){\r\n\r\n            if(dayjs(date).isBetween(dayjs(listing.stays[i].startDate), dayjs(listing.stays[i].endDate), 'day', '[)')){\r\n                return true;\r\n            }\r\n            else{\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Grid container sx={{justifyContent: 'center', display: 'flex', width:400}}>\r\n            <Grid item xs={7}>\r\n                <Typography variant=\"h4\" sx={{mb:3, mt:3}}>Book a Stay</Typography>\r\n                <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n                <Typography vairant=\"h6\" sx={{mt:4, mb:1}}>When would you like to stay?</Typography>\r\n\r\n                <Typography sx={{mt:3, mb:1}}>Check-in</Typography>\r\n                <DesktopDatePicker\r\n                    label=\"Check-in\"\r\n                    inputFormat=\"MM/DD/YYYY\"\r\n                    value={checkin}\r\n                    shouldDisableDate={isDisabled}\r\n                    onChange={handleCheckinChange}\r\n                    />\r\n                <Typography sx={{mt:3, mb:1}}>Check-out</Typography>\r\n                <DesktopDatePicker\r\n                    label=\"Check-out\"\r\n                    inputFormat=\"MM/DD/YYYY\"\r\n                    value={checkout}\r\n                    shouldDisableDate={isDisabled}\r\n                    onChange={handleCheckoutChange}\r\n                    />\r\n                {showBookingMessage()}\r\n                <br/>\r\n                <Button variant=\"contained\" sx={{\":hover\": {\r\n                bgcolor: \"peachpuff\"}, mt:3, mr:2, backgroundColor:\"lightsalmon\"}} \r\n                onClick={confirmBooking}>Confirm\r\n                </Button>\r\n                <Button variant=\"contained\" sx={{\":hover\": {\r\n                bgcolor: \"gray\"}, mt:3, backgroundColor:'lightgray'}} \r\n                onClick={() => setDrawerOpen(false)}>Cancel</Button>\r\n            </Grid>  \r\n        </Grid>\r\n    )\r\n}\r\nconst handleCheckinChange = (newValue) => {\r\n    setCheckin(newValue);\r\n}\r\nconst handleCheckoutChange = (newValue) => {\r\n    setCheckout(newValue);\r\n}\r\nconst showBookingMessage = () => {\r\n\r\n    return(\r\n        failBooking &&\r\n        <Typography variant=\"caption\" color=\"red\">{failBookingMessage}</Typography>\r\n    )\r\n}\r\nconst confirmBooking = () => {\r\n\r\n    if(dayjs(checkin).isAfter(dayjs(checkout))){\r\n\r\n        setFailBooking(true);\r\n        setFailBookingMessage(\"Check-in date must be before check-out date.\");\r\n    }\r\n    else if(dayjs(checkin).isBefore(dayjs()) || dayjs(checkin).isBefore(dayjs())){\r\n\r\n        setFailBooking(true);\r\n        setFailBookingMessage(\"Check-in and check-out must be future dates.\");\r\n    }\r\n    else if((checkin == \"\" && checkout != \"\") || (checkin == null && checkout != null)){\r\n        setFailBooking(true);\r\n        setFailBookingMessage(\"Please select a check-in date.\");\r\n    }\r\n    else if((checkout == \"\" && checkin != \"\") || (checkout == null && checkin != null)){\r\n        setFailBooking(true);\r\n        setFailBookingMessage(\"Please select a check-out date.\");\r\n    }\r\n    else{\r\n\r\n        const APIRequest = {\r\n            GuestId: user.id,\r\n            HostId: listing.hostId,\r\n            ListingId: Number(id),\r\n            StartDate: checkin,\r\n            EndDate: checkout,\r\n        }\r\n\r\n        fetch(`${api}/bnb/addstay`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(APIRequest),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                setDrawerOpen(false);\r\n                setModalOpen(true);\r\n            });\r\n    }\r\n}\r\nconst showReviews = () => {\r\n    \r\n    return listing.stays.map(function(val, index){\r\n\r\n        return(\r\n\r\n            val.review != null &&\r\n            <Grid item s={4} key={index}>\r\n                <Card sx={{ maxWidth: 300, margin:3}}>\r\n                    <CardContent>\r\n                      <Typography sx={{ fontSize: 14 }}>\r\n                        {val.review.username}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" color=\"text.secondary\">\r\n                        {dayjs(val.startDate).format('MM/DD/YYYY')} - {dayjs(val.endDate).format('MM/DD/YYYY')}\r\n                      </Typography>\r\n                          <Rating\r\n                          name=\"user rating\"\r\n                          value={val.review.rating}\r\n                          disabled\r\n                          />\r\n                      <Typography variant=\"body2\">\r\n                        \"{val.review.text}\"\r\n                      </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n\r\n        )\r\n    })\r\n}\r\nconst handleClickBooking = () => {\r\n\r\n    if(!isLoggedIn){\r\n        setRequiresLogin(true);\r\n        setLoginErrorMessage(\"You must log in to book a stay.\");\r\n    }\r\n    else{\r\n        setDrawerOpen(true);\r\n    }\r\n    //before changing it, onClick for booking button was {() => setDrawerOpen(true)}\r\n}\r\nconst showLoginError = () => {\r\n    return(\r\n        requiresLogin &&\r\n        <Typography variant=\"caption\" color=\"red\">{loginErrorMessage}</Typography>\r\n    )\r\n}\r\nconst handleClickFavorite = () => {\r\n\r\n    if(!isLoggedIn){\r\n        setRequiresLogin(true);\r\n        setLoginErrorMessage(\"You must log in to add to favorites.\");\r\n    }\r\n    else{\r\n\r\n        var APIRequest = {\r\n            UserId: user.id,\r\n            ListingId: listing.id\r\n        };\r\n\r\n        fetch(`${api}/bnb/favorite`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(APIRequest),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n                \r\n                if(data.success){\r\n                    setAddtoFavorites(true);\r\n                }\r\n            });\r\n    }\r\n}\r\nconst displayFavoriteIcon = () => {\r\n\r\n    var isFavorite = false;\r\n\r\n    if(isLoggedIn && !!user){\r\n\r\n        for(let i = 0; i < user.favorites.length; i++){\r\n\r\n            if(user.favorites[i] == id || addToFavorites){\r\n                isFavorite = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        isFavorite \r\n        ?   <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <IconButton>\r\n                    <FavoriteIcon sx={{m:2, color:\"pink\"}}/>\r\n                </IconButton>\r\n            </Grid>\r\n        :   <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <IconButton onClick={handleClickFavorite}>\r\n                    <FavoriteIcon sx={{m:2}}/>\r\n                </IconButton>\r\n            </Grid>\r\n    )\r\n}\r\n\r\n\r\nconst showPic = () => {\r\n\r\n    var data = listing.picture;\r\n    \r\n    const Picture = ({ data }) => <img src={`data:image/jpeg;base64,${data}`} />\r\n    \r\n    return (\r\n\r\n        (data != null)\r\n        ? <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n            <Picture data={data}/>\r\n          </Grid>\r\n        : <div></div>\r\n    )\r\n}\r\n\r\n    return(\r\n\r\n        <div>\r\n\r\n            \r\n            {listingLoaded && \r\n            <div>\r\n            {showPic()}\r\n            {displayFavoriteIcon()}\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={12} sx={{justifyContent: 'center', display: 'flex'}}>\r\n                    {showLoginError()}\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <Typography sx={{mt:1}} variant='h6'>{listing.title}</Typography>\r\n                    <Typography variant='subtitle1'>{listing.location}</Typography>\r\n                    <Button variant=\"contained\" sx={{\":hover\": {\r\n                        bgcolor: \"peachpuff\"}, mt:2, backgroundColor:\"lightsalmon\"}}\r\n                        onClick={handleClickBooking}>\r\n                        Book A Stay\r\n                    </Button>    \r\n\r\n                    <Drawer open={drawerOpen} anchor={\"left\"} onClose={() => setDrawerOpen(false)}>\r\n                        {showBookingDrawer()}\r\n                    </Drawer>\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                    <Typography sx={{mt:1}} variant='h6'>${listing.rate}/Night</Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={4}>\r\n                    <Typography variant='body1'>\"{listing.description}\"</Typography>           \r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}> \r\n                <Grid item xs={4}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Amenities</Typography>\r\n                    <List sx={{\r\n                        width: '100%',\r\n                        maxWidth: 500,\r\n                        bgcolor: 'background.white',\r\n                        position: 'relative',\r\n                        overflow: 'auto',\r\n                        maxHeight: 200,\r\n                        '& ul': { padding: 0 },\r\n                        }}>\r\n                        {showListingAmenities()}\r\n                        </List>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}> \r\n                <Grid item xs={4}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Reviews</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}/>\r\n                {showReviews()}\r\n            </Grid>\r\n            <Modal\r\n              open={modalOpen}\r\n              onClose={() => setModalOpen(false)}\r\n            >\r\n                <Box sx={style}>\r\n                    <Typography variant=\"h5\">Booking confirmed! Enjoy your stay</Typography>\r\n                </Box>\r\n            </Modal>\r\n\r\n            </div>}\r\n        </div>\r\n    )\r\n}",[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\CreateListing\\CreateListing.js",["122","123","124","125","126","127","128","129"],[],"import { Divider, Typography } from \"@mui/material\";\r\nimport Grid from '@mui/material/Unstable_Grid2';\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Button from \"@mui/material/Button\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport List from \"@mui/material/List\";\r\nimport Modal from '@mui/material/Modal';\r\nimport { Link } from \"react-router-dom\";\r\nimport dayjs from \"dayjs\";\r\nimport { UserContext } from \"../../Contexts/UserContext/UserContext\";\r\nimport { useContext } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEffect } from \"react\";\r\nimport ImageUpload from \"../ImageUpload/ImageUpload\";\r\n\r\nexport default function CreateListing(){\r\n\r\nconst api = `https://localhost:44305`;\r\n\r\nconst style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    borderRadius:3,\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nconst {user, setUser} = useContext(UserContext);\r\nconst [userLoaded, setUserLoaded] = useState(false); \r\nconst [title, setTitle] = useState('');\r\nconst [rate, setRate] = useState();\r\nconst [location, setLocation] = useState('');\r\nconst [description, setDescription] = useState('');\r\nconst [availableAmenities, setAvailableAmenities] = useState([]);\r\nconst [amenitiesLoaded, setAmenitiesLoaded] = useState(false);\r\nconst [listingAmenities, setListingAmenities] = useState([]);\r\nconst [customAmenity, setCustomAmenity] = useState('');\r\nconst [failMessage, setFailMessage] = useState('');\r\nconst [failCreateListing, setFailCreateListing] = useState(false);\r\nconst [modalOpen, setModalOpen] = useState(false);\r\nconst [files, setFiles] = useState([]);\r\nconst navigate = useNavigate();\r\n\r\n\r\nconst reRoute = () => {\r\n    let now = String(dayjs());\r\n    document.cookie = `id=;expires=${now}UTC;path=/`;\r\n    //this should overwrite any cookie so that it expires.\r\n    navigate(\"/user/login\");\r\n}\r\nconst getUser = (id) => {\r\n\r\n    fetch(`${api}/bnb/user/${id}`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n        setUser(data.user);\r\n    })\r\n    .then(() => {\r\n        setUserLoaded(true);\r\n    });\r\n}\r\n\r\nconst verifyLogin = () => {\r\n\r\n    if(!user){\r\n        //if user is null, parse the cookie. If there's no cookie, id will be NaN. So, either get user by Id if Id has value, or reroute to login.\r\n        var elements = document.cookie.split('=');\r\n        var id = Number(elements[1]);\r\n\r\n        if(!isNaN(id)){\r\n            getUser(id);\r\n        }\r\n        else{\r\n            reRoute();\r\n        }\r\n    }\r\n    else{\r\n        if(dayjs().isAfter(dayjs(user.logTime).add(6, 'hour'))){\r\n            reRoute();\r\n        }\r\n        else{ \r\n            setUserLoaded(true); \r\n        }\r\n    } \r\n}\r\nuseEffect(() => {\r\n    verifyLogin();\r\n}, []);\r\n\r\nconst getAmenities = () => {\r\n\r\n    fetch(`${api}/bnb/amenities`)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n        console.log(data);\r\n        setAvailableAmenities(data.amenities);\r\n    })\r\n    .then(() =>{\r\n        setAmenitiesLoaded(true);\r\n    });\r\n}\r\nuseEffect(() => {\r\n    getAmenities();\r\n}, []);\r\n\r\n\r\nconst handleTitleChange = (e) => {\r\n    setTitle(e.target.value);\r\n}\r\nconst handleRateChange = (e) => {\r\n    setRate(e.target.value);\r\n}\r\nconst handleLocationChange = (e) => {\r\n    setLocation(e.target.value);\r\n}\r\nconst handleDescriptionChange = (e) => {\r\n    setDescription(e.target.value);\r\n}\r\nconst handleClickAmenity = (e) => {\r\n    setListingAmenities([...listingAmenities, e.target.value]);\r\n}\r\nconst showAvailableAmenities = () => {\r\n\r\n    return availableAmenities.map(function(val, index){\r\n        return(\r\n            <MenuItem key={index} value={val}>{val}</MenuItem>\r\n        )\r\n    })\r\n}\r\nconst handleCustomAmenityChange = (e) => {\r\n    setCustomAmenity(e.target.value);\r\n}\r\nconst addCustomAmenity = () => {\r\n    setListingAmenities([...listingAmenities, customAmenity]);\r\n}\r\nconst showListingAmenities = () => {\r\n    \r\n    return listingAmenities.map(function(val, index){\r\n        return(      \r\n            <ListItem key={index}>\r\n                • {val}\r\n                <Button type=\"button\" onClick={handleClickRemoveAmenity} data-value1={val}>x</Button>\r\n            </ListItem>           \r\n        )        \r\n    })\r\n}\r\nconst handleClickRemoveAmenity = (e) => {\r\n\r\n    const value1 = e.currentTarget.getAttribute(\"data-value1\")\r\n        \r\n    var newAmenities = listingAmenities.filter(a => a != value1);\r\n\r\n    setListingAmenities(newAmenities);\r\n}\r\nconst handleListingChange = () => {\r\n     \r\n    var file = files[0];\r\n    var fileType = file['type'];\r\n    const validImageTypes = ['image/jpeg', 'image/png'];\r\n\r\n    var rateNumber = parseFloat(rate);\r\n\r\n    if (!validImageTypes.includes(fileType)) {\r\n        setFailCreateListing(true);\r\n        setFailMessage(\"Error: File type must be jpeg or png.\");\r\n        setFiles([]);\r\n    }\r\n    else if (isNaN(rateNumber)){\r\n        setFailCreateListing(true);\r\n        setFailMessage(\"Error: Rate must be a number or decimal.\");\r\n    } \r\n    else if (title == \"\" || location == \"\" || description == \"\"){\r\n        setFailCreateListing(true);\r\n        setFailMessage(\"Error: One or more fields were left blank.\");\r\n    }\r\n    else {\r\n\r\n        var APIRequest = {\r\n            Id: 0,\r\n            HostId: user.id,\r\n            Title: title,\r\n            Rate: Number(rate),\r\n            Location: location,\r\n            Description: description,\r\n            Amenities: listingAmenities,      \r\n        };\r\n        \r\n        fetch(`${api}/bnb/addlisting`, {\r\n            method: 'POST',\r\n            body: JSON.stringify(APIRequest),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                console.log(data);\r\n\r\n                if(data.success){\r\n                    user.listings = [...user.listings, data.listing];\r\n                    setUser(user);\r\n                    setModalOpen(true);\r\n                }\r\n            });\r\n\r\n        if(!!files[0]){\r\n\r\n            var data = new FormData()\r\n            data.append('file', files[0])\r\n        \r\n            fetch(`${api}/bnb/files`, {\r\n                method: 'POST',\r\n                body: data,\r\n                })\r\n                .then((response) => response.json())\r\n                .then((data) => {\r\n                    console.log(data);\r\n    \r\n                    //if(!data.success)\r\n                    //show an error message, likely related to type of file.\r\n                    //check what happens when you upload mp3\r\n                }); \r\n        }\r\n    }   \r\n}\r\nconst showFailMessage = () => {\r\n\r\n    return (\r\n        <div>\r\n        {\r\n        failCreateListing &&   \r\n            <div style={{margin:'auto'}}>\r\n                <Typography color=\"red\" variant=\"h6\">{failMessage}</Typography>\r\n            </div>    \r\n        }\r\n        </div>\r\n    )\r\n}\r\nconst cancelCreateListing = () => {\r\n    navigate(\"/mystuff\");\r\n}\r\nconst fileSelectedHandler = (e) => {\r\n    setFiles([...files, ...e.target.files]);\r\n}\r\n\r\n    return(\r\n\r\n        <div>\r\n            {amenitiesLoaded && \r\n            <div>\r\n            <Typography variant=\"h2\" sx={{justifyContent: 'center', display: 'flex', margin:2, fontSize:50}}>New Listing...</Typography>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <form>\r\n                  <div><Typography variant=\"h6\" sx={{mb:1}}>Upload Image</Typography></div>\r\n                  <input type=\"file\" multiple onChange={fileSelectedHandler} />\r\n                </form>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Listing Title</Typography>\r\n                    <TextField sx={{mb:2}} placeholder='Enter Title' onChange={handleTitleChange}/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Nightly Rate($)</Typography>\r\n                    <TextField sx={{mb:2}} placeholder='Enter Rate' onChange={handleRateChange}/>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Location</Typography>\r\n                    <TextField sx={{mb:2}} placeholder='Enter Location' onChange={handleLocationChange}/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={6}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Description\r\n                    </Typography>\r\n                    <TextField fullWidth multiline rows={6} sx={{justifyContent: 'center', display: 'flex', mb:2}} placeholder='Describe the property...' onChange={handleDescriptionChange}/>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Amenities</Typography>\r\n                    <Box sx={{ maxWidth: 180 }}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel>Amenities</InputLabel>\r\n                            <Select\r\n                                id=\"amenity-select\"\r\n                                label=\"Amenities\"\r\n                                value={\"\"}\r\n                                onChange={handleClickAmenity}\r\n                            >\r\n                                {showAvailableAmenities()}\r\n                            </Select>\r\n                        </FormControl>\r\n                     </Box>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Add Custom Amenity</Typography>\r\n                    <TextField sx={{mb:2}} placeholder='Enter Amenity' onChange={handleCustomAmenityChange}/>\r\n                    <Button sx={{color:'lightsalmon'}} onClick={addCustomAmenity}>Add</Button>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <Typography sx={{mt:2}} variant='h6'>Your Amenities:</Typography>\r\n                    <List sx={{\r\n                        width: '100%',\r\n                        maxWidth: 500,\r\n                        bgcolor: 'background.white',\r\n                        position: 'relative',\r\n                        overflow: 'auto',\r\n                        maxHeight: 200,\r\n                        '& ul': { padding: 0 },\r\n                        }}>\r\n                        {showListingAmenities()}\r\n                    </List>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Divider sx={{backgroundColor:'peachpuff'}}/>\r\n\r\n            <Grid container sx={{justifyContent: 'center', display: 'flex', margin:2}}>\r\n                <Grid item xs={5}/>\r\n                <Grid item xs={.75}>\r\n                    <Button variant=\"contained\" sx={{\":hover\": {\r\n                    bgcolor: \"gray\"}, backgroundColor:'lightgray', m:'auto', justifyContent: 'center', display: 'flex',}} onClick={cancelCreateListing}>Cancel</Button>\r\n                </Grid>\r\n                <Grid item xs={.75}>\r\n                    <Button variant=\"contained\" sx={{\":hover\": {\r\n                    bgcolor: \"peachpuff\"}, backgroundColor:'lightsalmon', m:'auto', justifyContent: 'center', display: 'flex'}} onClick={handleListingChange}>Save</Button>\r\n                </Grid>\r\n                <Grid item xs={5}>\r\n                    {showFailMessage()} \r\n                </Grid>\r\n                {modalOpen &&\r\n                    <Modal\r\n                      open={modalOpen}\r\n                      onClose={() => navigate(`/mystuff`)}\r\n                    >\r\n                        <Box sx={style}>\r\n                            <Typography variant=\"h6\">Listing saved!</Typography>\r\n                            <Link style={{ textDecoration: 'none' }} to={`/mystuff`}>\r\n                                <Button>Back to MyStuff</Button>\r\n                            </Link>\r\n                        </Box>\r\n                    </Modal>\r\n                }\r\n            </Grid>\r\n            </div>\r\n            } \r\n        </div>\r\n\r\n    )\r\n}","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Layout\\Layout.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Login\\Login.js",["130","131"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\MyStuff\\MyStuff.js",["132","133","134"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ViewListings\\ViewListings.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\AppBar\\MyAppBar.js",["150","151"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\BookingDrawer\\BookingDrawer.js",[],[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ListingsCard\\ListingsCard.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\CreateAccount\\CreateAccount.js",["152","153","154","155","156","157"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Contexts\\UserContext\\UserContext.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\ImageUpload\\ImageUpload.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\MyListings\\MyListings.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\UpcomingStays\\UpcomingStays.js",["158"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\Favorites\\Favorites.js",["159"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\BnbProject\\BnbWebAPI\\BnbWebsite\\src\\Components\\Subcomponents\\PastStays\\PastStays.js",["160"],[],{"ruleId":"161","severity":1,"message":"162","line":19,"column":7,"nodeType":"163","messageId":"164","endLine":19,"endColumn":10},{"ruleId":"165","severity":1,"message":"166","line":100,"column":4,"nodeType":"167","endLine":100,"endColumn":6,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":116,"column":4,"nodeType":"167","endLine":116,"endColumn":6,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":132,"column":33,"nodeType":"173","messageId":"174","endLine":132,"endColumn":35},{"ruleId":"165","severity":1,"message":"175","line":143,"column":4,"nodeType":"167","endLine":143,"endColumn":6,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"172","line":189,"column":55,"nodeType":"173","messageId":"174","endLine":189,"endColumn":57},{"ruleId":"171","severity":1,"message":"177","line":223,"column":20,"nodeType":"173","messageId":"174","endLine":223,"endColumn":22},{"ruleId":"171","severity":1,"message":"177","line":223,"column":38,"nodeType":"173","messageId":"174","endLine":223,"endColumn":40},{"ruleId":"171","severity":1,"message":"177","line":223,"column":59,"nodeType":"173","messageId":"174","endLine":223,"endColumn":61},{"ruleId":"178","severity":1,"message":"179","line":286,"column":35,"nodeType":"180","endLine":286,"endColumn":81},{"ruleId":"165","severity":1,"message":"166","line":93,"column":4,"nodeType":"167","endLine":93,"endColumn":6,"suggestions":"181"},{"ruleId":"165","severity":1,"message":"175","line":110,"column":4,"nodeType":"167","endLine":110,"endColumn":6,"suggestions":"182"},{"ruleId":"171","severity":1,"message":"177","line":200,"column":22,"nodeType":"173","messageId":"174","endLine":200,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":200,"column":40,"nodeType":"173","messageId":"174","endLine":200,"endColumn":42},{"ruleId":"171","severity":1,"message":"177","line":204,"column":23,"nodeType":"173","messageId":"174","endLine":204,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":204,"column":40,"nodeType":"173","messageId":"174","endLine":204,"endColumn":42},{"ruleId":"171","severity":1,"message":"177","line":319,"column":34,"nodeType":"173","messageId":"174","endLine":319,"endColumn":36},{"ruleId":"161","severity":1,"message":"183","line":341,"column":7,"nodeType":"163","messageId":"164","endLine":341,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":350,"column":15,"nodeType":"180","endLine":350,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":359,"column":35,"nodeType":"180","endLine":359,"endColumn":81},{"ruleId":"161","severity":1,"message":"184","line":20,"column":8,"nodeType":"163","messageId":"164","endLine":20,"endColumn":19},{"ruleId":"161","severity":1,"message":"185","line":39,"column":8,"nodeType":"163","messageId":"164","endLine":39,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":98,"column":4,"nodeType":"167","endLine":98,"endColumn":6,"suggestions":"186"},{"ruleId":"165","severity":1,"message":"169","line":114,"column":4,"nodeType":"167","endLine":114,"endColumn":6,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"172","line":161,"column":55,"nodeType":"173","messageId":"174","endLine":161,"endColumn":57},{"ruleId":"171","severity":1,"message":"177","line":182,"column":20,"nodeType":"173","messageId":"174","endLine":182,"endColumn":22},{"ruleId":"171","severity":1,"message":"177","line":182,"column":38,"nodeType":"173","messageId":"174","endLine":182,"endColumn":40},{"ruleId":"171","severity":1,"message":"177","line":182,"column":59,"nodeType":"173","messageId":"174","endLine":182,"endColumn":61},{"ruleId":"161","severity":1,"message":"188","line":22,"column":8,"nodeType":"163","messageId":"164","endLine":22,"endColumn":12},{"ruleId":"161","severity":1,"message":"189","line":22,"column":23,"nodeType":"163","messageId":"164","endLine":22,"endColumn":33},{"ruleId":"165","severity":1,"message":"166","line":101,"column":4,"nodeType":"167","endLine":101,"endColumn":6,"suggestions":"190"},{"ruleId":"165","severity":1,"message":"191","line":105,"column":4,"nodeType":"167","endLine":105,"endColumn":6,"suggestions":"192"},{"ruleId":"171","severity":1,"message":"177","line":173,"column":20,"nodeType":"173","messageId":"174","endLine":173,"endColumn":22},{"ruleId":"165","severity":1,"message":"193","line":46,"column":4,"nodeType":"167","endLine":46,"endColumn":6,"suggestions":"194"},{"ruleId":"165","severity":1,"message":"193","line":57,"column":4,"nodeType":"167","endLine":57,"endColumn":6,"suggestions":"195"},{"ruleId":"171","severity":1,"message":"177","line":120,"column":22,"nodeType":"173","messageId":"174","endLine":120,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":120,"column":40,"nodeType":"173","messageId":"174","endLine":120,"endColumn":42},{"ruleId":"171","severity":1,"message":"177","line":124,"column":23,"nodeType":"173","messageId":"174","endLine":124,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":124,"column":40,"nodeType":"173","messageId":"174","endLine":124,"endColumn":42},{"ruleId":"196","severity":1,"message":"197","line":140,"column":54,"nodeType":"198","messageId":"199","endLine":140,"endColumn":55},{"ruleId":"171","severity":1,"message":"177","line":144,"column":25,"nodeType":"173","messageId":"174","endLine":144,"endColumn":27},{"ruleId":"171","severity":1,"message":"172","line":146,"column":58,"nodeType":"173","messageId":"174","endLine":146,"endColumn":60},{"ruleId":"171","severity":1,"message":"172","line":152,"column":20,"nodeType":"173","messageId":"174","endLine":152,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":152,"column":57,"nodeType":"173","messageId":"174","endLine":152,"endColumn":59},{"ruleId":"171","severity":1,"message":"172","line":160,"column":62,"nodeType":"173","messageId":"174","endLine":160,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":164,"column":62,"nodeType":"173","messageId":"174","endLine":164,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":168,"column":62,"nodeType":"173","messageId":"174","endLine":168,"endColumn":64},{"ruleId":"171","severity":1,"message":"172","line":172,"column":62,"nodeType":"173","messageId":"174","endLine":172,"endColumn":64},{"ruleId":"161","severity":1,"message":"200","line":33,"column":7,"nodeType":"163","messageId":"164","endLine":33,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":62,"column":4,"nodeType":"167","endLine":62,"endColumn":6,"suggestions":"201"},{"ruleId":"161","severity":1,"message":"188","line":38,"column":8,"nodeType":"163","messageId":"164","endLine":38,"endColumn":12},{"ruleId":"161","severity":1,"message":"189","line":38,"column":23,"nodeType":"163","messageId":"164","endLine":38,"endColumn":33},{"ruleId":"171","severity":1,"message":"177","line":93,"column":15,"nodeType":"173","messageId":"174","endLine":93,"endColumn":17},{"ruleId":"171","severity":1,"message":"177","line":93,"column":30,"nodeType":"173","messageId":"174","endLine":93,"endColumn":32},{"ruleId":"171","severity":1,"message":"177","line":93,"column":51,"nodeType":"173","messageId":"174","endLine":93,"endColumn":53},{"ruleId":"171","severity":1,"message":"177","line":93,"column":72,"nodeType":"173","messageId":"174","endLine":93,"endColumn":74},{"ruleId":"171","severity":1,"message":"177","line":15,"column":50,"nodeType":"173","messageId":"174","endLine":15,"endColumn":52},{"ruleId":"171","severity":1,"message":"177","line":11,"column":37,"nodeType":"173","messageId":"174","endLine":11,"endColumn":39},{"ruleId":"171","severity":1,"message":"177","line":24,"column":50,"nodeType":"173","messageId":"174","endLine":24,"endColumn":52},"no-unused-vars","'api' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'verifyLogin'. Either include it or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'getAmenities'. Either include it or remove the dependency array.",["203"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getListing'. Either include it or remove the dependency array.",["204"],"Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["205"],["206"],"'showListingPic' is assigned a value but never used.","'ImageUpload' is defined but never used.","'userLoaded' is assigned a value but never used.",["207"],["208"],"'user' is assigned a value but never used.","'isLoggedIn' is assigned a value but never used.",["209"],"React Hook useEffect has a missing dependency: 'getListings'. Either include it or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["211"],["212"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'reRoute' is assigned a value but never used.",["213"],{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"214","fix":"220"},{"desc":"218","fix":"221"},{"desc":"214","fix":"222"},{"desc":"216","fix":"223"},{"desc":"214","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},{"desc":"214","fix":"230"},"Update the dependencies array to be: [verifyLogin]",{"range":"231","text":"232"},"Update the dependencies array to be: [getAmenities]",{"range":"233","text":"234"},"Update the dependencies array to be: [getListing]",{"range":"235","text":"236"},{"range":"237","text":"232"},{"range":"238","text":"236"},{"range":"239","text":"232"},{"range":"240","text":"234"},{"range":"241","text":"232"},"Update the dependencies array to be: [getListings]",{"range":"242","text":"243"},"Update the dependencies array to be: [api]",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"232"},[3180,3182],"[verifyLogin]",[3512,3514],"[getAmenities]",[4186,4188],"[getListing]",[3077,3079],[3416,3418],[3090,3092],[3422,3424],[2826,2828],[2879,2881],"[getListings]",[1739,1741],"[api]",[1948,1950],[1812,1814]]