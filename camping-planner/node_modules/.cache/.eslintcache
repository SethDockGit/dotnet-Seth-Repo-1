[{"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\index.js":"1","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\App.js":"2","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Layout\\Layout.js":"3","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Home\\Home.js":"4","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\TripsView\\TripsView.js":"5","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Trip\\Trip.js":"6","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\AppBar\\MyAppBar.js":"7","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Contexts\\TripsContext.js":"8","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\CreateTrip\\CreateTrip.js":"9","C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\PastTrip\\PastTrip.js":"10"},{"size":384,"mtime":1676401895803,"results":"11","hashOfConfig":"12"},{"size":2291,"mtime":1676670321746,"results":"13","hashOfConfig":"12"},{"size":221,"mtime":1676401704195,"results":"14","hashOfConfig":"12"},{"size":1441,"mtime":1676676660226,"results":"15","hashOfConfig":"12"},{"size":2766,"mtime":1676840382180,"results":"16","hashOfConfig":"12"},{"size":15225,"mtime":1676680574058,"results":"17","hashOfConfig":"12"},{"size":1179,"mtime":1676241684248,"results":"18","hashOfConfig":"12"},{"size":88,"mtime":1676235021190,"results":"19","hashOfConfig":"12"},{"size":11495,"mtime":1676683282512,"results":"20","hashOfConfig":"12"},{"size":4499,"mtime":1676680546856,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wb1ayl",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\index.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\App.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Layout\\Layout.js",[],[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Home\\Home.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\TripsView\\TripsView.js",["55","56"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\Trip\\Trip.js",["57","58","59","60","61","62","63","64"],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\AppBar\\MyAppBar.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Contexts\\TripsContext.js",[],[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\CreateTrip\\CreateTrip.js",["65","66","67","68","69","70"],[],"import { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport { ListItem, TextField, Typography } from '@mui/material';\r\nimport dayjs from 'dayjs';\r\nimport { TripsContext } from '../../Contexts/TripsContext';\r\nimport { useContext } from 'react';\r\nimport React from 'react';\r\nimport Divider from '@mui/material/Divider';\r\nimport { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport List from '@mui/material/List';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function CreateTrip(){\r\n\r\n    const startCrew = []\r\n    const startGear = []\r\n\r\n    const { trips, setTrips } = useContext(TripsContext);\r\n\r\n    const [startDate, setStartDate] = React.useState('');\r\n    const [endDate, setEndDate] = React.useState('');\r\n    const [location, setLocation] = useState(\"\");\r\n    const [crew, setCrew] = useState(startCrew);\r\n    const [crewName, setCrewName] = useState(\"\");\r\n    const [crewPhone, setCrewPhone] = useState(\"\");\r\n    const [crewEmail, setCrewEmail] = useState(\"\");\r\n    const [gear, setGear] = useState(startGear);\r\n    const [gearName, setGearName] = useState(\"\");\r\n    const [gearQuantity, setGearQuantity] = useState(0);\r\n    const [dateMessage, setDateMessage] = useState(\"No dates selected\");\r\n    const [failCreateTrip, setFailCreateTrip] = useState(false);\r\n    const navigate = useNavigate();\r\n    \r\n    //const [gearBringer, setGearBringer] = useState(\"\");\r\n\r\n    const handleStartDateChange = (newValue) => {\r\n\r\n        if (dayjs(newValue).isAfter(dayjs(endDate))){\r\n            setDateMessage(\"Start date cannot be later than end date.\");\r\n        }\r\n        else if(dayjs(newValue).isBefore(dayjs(endDate))){\r\n\r\n            setDateMessage(`${dayjs(newValue).format('MM/DD/YYYY')} to ${dayjs(endDate).format('MM/DD/YYYY')}`);\r\n            setStartDate(newValue);\r\n\r\n        }\r\n        else{\r\n            setStartDate(newValue);\r\n        }\r\n    }\r\n    const handleEndDateChange = (newValue) => {\r\n\r\n        if (dayjs(newValue).isBefore(dayjs(startDate))){\r\n            setDateMessage(\"End date cannot be earlier than start date.\");\r\n        }\r\n        else if (dayjs(newValue).isAfter(dayjs(startDate))){\r\n\r\n            setDateMessage(`${dayjs(startDate).format('MM/DD/YYYY')} to ${dayjs(newValue).format('MM/DD/YYYY')}`);\r\n            setEndDate(newValue);\r\n\r\n        }\r\n        else{\r\n            setEndDate(newValue);\r\n        }\r\n    }\r\n    const showDateMessage = () => {\r\n\r\n        return (\r\n            <div>\r\n            <Typography id=\"showDate\" style={{margin:15, fontWeight:'light', fontSize: 16}} variant=\"h5\">\r\n                {dateMessage}\r\n            </Typography> \r\n            </div>\r\n        )\r\n    }\r\n    const handleLocationChange = (e) => {\r\n        setLocation(e.target.value);\r\n    }\r\n    const handleCrewNameChange = (e) => {\r\n        setCrewName(e.target.value);\r\n    }\r\n    const handleCrewPhoneChange = (e) => {\r\n        setCrewPhone(e.target.value);\r\n    }\r\n    const handleCrewEmailChange = (e) => {\r\n        setCrewEmail(e.target.value);\r\n    }\r\n    const handleCrewChange = () => {\r\n\r\n        var nextId;\r\n\r\n        if(crew.length === 0){\r\n            nextId = 0;\r\n        }\r\n        else{\r\n            var newArray = crew.map(function(val, index){\r\n                return(\r\n                    val.id\r\n                )\r\n            });\r\n            nextId = Math.max(...newArray);\r\n        }\r\n\r\n        let crewMember = \r\n            {\r\n                id: nextId +1,\r\n                name: crewName,\r\n                phone: crewPhone,\r\n                email: crewEmail,\r\n            }\r\n        \r\n        setCrew([...crew, crewMember]);\r\n    }\r\n    const handleClickRemoveCrew = (e) => {\r\n\r\n        const value1 = e.currentTarget.getAttribute(\"data-value1\")\r\n        \r\n        var newCrew = crew.filter(c => c.id != value1);\r\n\r\n        setCrew(newCrew);\r\n            \r\n    }\r\n    const handleGearNameChange = (e) => {\r\n        setGearName(e.target.value);\r\n    }\r\n    const handleGearQuantityChange = (e) => {\r\n        setGearQuantity(e.target.value);\r\n    }\r\n    const handleGearChange = () => {\r\n\r\n        var nextId;\r\n\r\n        if(gear.length === 0){\r\n            nextId = 0;\r\n        }\r\n        else{\r\n            var newArray = gear.map(function(val, index){\r\n                return(\r\n                    val.id\r\n                )\r\n            });\r\n            nextId = Math.max(...newArray);\r\n        }\r\n\r\n        let gearToAdd = \r\n            {\r\n                id: nextId +1,\r\n                name: gearName,\r\n                quantity: gearQuantity,\r\n            }\r\n        \r\n        setGear([...gear, gearToAdd]);\r\n    }\r\n    const handleClickRemoveGear = (e) => {\r\n\r\n        const value1 = e.currentTarget.getAttribute(\"data-value1\")\r\n\r\n        var newGear = gear.filter(g => g.id != value1);\r\n\r\n        setGear(newGear);\r\n    }\r\n    const handleTripChange = () => {\r\n\r\n        if (location == \"\" || startDate == \"\" || endDate == \"\"){\r\n\r\n            setFailCreateTrip(true);\r\n\r\n        }\r\n        else{\r\n            \r\n            var newArray = trips.map(function(val, index){\r\n                return(\r\n                    val.id\r\n                )\r\n            });\r\n\r\n            var nextId = Math.max(...newArray);\r\n\r\n            let trip = {\r\n                id: nextId +1,\r\n                location: location,\r\n                startDate: startDate,\r\n                endDate: endDate,\r\n                crew: crew,\r\n                gear: gear,\r\n            }\r\n\r\n            setTrips([...trips, trip]);\r\n            navigate(\"/trips\");\r\n\r\n        }\r\n    }\r\n    const failMessage = () => {\r\n        \r\n        return (\r\n            <div>\r\n            {\r\n            failCreateTrip &&   \r\n                <div style={{marginTop:15}}>\r\n                    <Typography color=\"red\" variant=\"h6\">Error: Must enter a date and location</Typography>\r\n                </div>    \r\n            }\r\n            </div>\r\n        )\r\n    }\r\n    const displayLocation = () => {\r\n        return(\r\n            <Typography style={{margin:15, fontWeight:'light', fontSize: 16}} variant=\"h5\">\r\n                {location}\r\n            </Typography>\r\n        )\r\n    }\r\n    const showCrewList = () => {\r\n        return crew.map(function(val, index){\r\n            return(      \r\n                <ListItem key={index}>\r\n                    {val.name} • {val.phone} • {val.email}\r\n                    <Button type=\"button\" onClick={handleClickRemoveCrew} data-value1={val.id}>x</Button>\r\n                </ListItem>           \r\n                \r\n            )        \r\n        })\r\n    }\r\n    const showGear = () => {     \r\n        return gear.map(function(val, index){\r\n            return(\r\n                <TableRow key={index}>\r\n                    <TableCell size=\"small\">{val.name}</TableCell>\r\n                    <TableCell size=\"small\" align=\"center\">{val.quantity}</TableCell>\r\n                    <TableCell size=\"small\" align=\"right\">\r\n                        <Button type=\"button\" onClick={handleClickRemoveGear} data-value1={val.id}>Remove</Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            )\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n        <Typography variant=\"h4\" style={{margin:15}}>New Trip</Typography>\r\n        <Divider light />\r\n        <div style={{margin:15, marginTop:15}}>\r\n            <Typography variant=\"h4\" sx={{fontSize:30}}>Dates</Typography>\r\n            <Typography variant=\"caption\">Select a Date Range</Typography>\r\n            <br/>\r\n            <DesktopDatePicker\r\n            label=\"Trip Start Date\"\r\n            inputFormat=\"MM/DD/YYYY\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n            renderInput={(params) => <TextField {...params} error={false} />}\r\n            />\r\n\r\n            <DesktopDatePicker\r\n            label=\"Trip End Date\"\r\n            inputFormat=\"MM/DD/YYYY\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n            renderInput={(params) => <TextField {...params} error={false} />}\r\n            />\r\n        </div> \r\n        <div>\r\n        {showDateMessage()}\r\n        </div>\r\n        <Divider light />\r\n        <div style={{margin:15}}>\r\n            <Typography variant=\"h4\" sx={{fontSize:30}}>Location</Typography>\r\n            <Typography variant=\"caption\">Name a Location</Typography>\r\n            <br/>\r\n            <TextField placeholder='Enter Location' onChange={handleLocationChange}></TextField>\r\n        </div>\r\n        {displayLocation()}\r\n        <Divider light />\r\n        <div style={{margin:15}}>\r\n            <Typography variant=\"h4\" sx={{fontSize:30}}>Crew</Typography>\r\n            <br/>\r\n            <List sx={{\r\n                    width: '100%',\r\n                    maxWidth: 500,\r\n                    bgcolor: 'background.oldlace',\r\n                    position: 'relative',\r\n                    overflow: 'auto',\r\n                    maxHeight: 300,\r\n                    '& ul': { padding: 0 },\r\n                  }}>\r\n                    {showCrewList()}\r\n            </List>\r\n            <div>\r\n                <Typography variant=\"caption\">Add Crew Member</Typography><br/>\r\n                <TextField placeholder='Name' onChange={handleCrewNameChange}></TextField>\r\n                <TextField placeholder='Phone' onChange={handleCrewPhoneChange}></TextField>\r\n                <TextField placeholder='Email' onChange={handleCrewEmailChange}></TextField>\r\n                <Button variant=\"contained\" sx={{backgroundColor:\"gray\"}} onClick={handleCrewChange}>Add</Button>\r\n            </div>\r\n            <br/><br/>\r\n        </div>\r\n        <Divider light />\r\n        <div style={{margin:15}}>\r\n            <Typography variant=\"h4\" sx={{fontSize:30}}>Gear</Typography>\r\n\r\n                <TableContainer sx={{ maxWidth: 484, backgroundColor:'mediumaquamarine', marginTop:2 }} component={Paper}>\r\n                  <Table sx={{ maxWidth: 484 }}>\r\n                    <TableHead sx={{ backgroundColor:'lightsteelblue' }}>\r\n                      <TableRow>\r\n                        <TableCell>Item</TableCell>\r\n                        <TableCell align=\"center\">Quantity</TableCell>\r\n                        <TableCell align=\"right\"/>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                    {showGear()}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n        <div style={{marginTop:15}}>\r\n            <Typography variant=\"caption\">Add Gear</Typography><br/>\r\n            <TextField placeholder='Name' onChange={handleGearNameChange}></TextField>\r\n            <TextField placeholder='Quantity' onChange={handleGearQuantityChange}></TextField>\r\n            <Button variant=\"contained\" sx={{backgroundColor:\"gray\"}} onClick={handleGearChange}>Add</Button>\r\n        </div>\r\n        </div>\r\n        <Divider light />\r\n        <Button style={{margin:15}} variant=\"contained\" sx={{backgroundColor:\"gray\"}} onClick={handleTripChange}>Create New Trip</Button>\r\n        {failMessage()}\r\n        </>\r\n\r\n    )\r\n\r\n}",[],"C:\\repos\\Seth repo share\\dotnet-Seth-Repo-1\\camping-planner\\src\\Components\\PastTrip\\PastTrip.js",["71","72","73"],[],{"ruleId":"74","severity":1,"message":"75","line":19,"column":26,"nodeType":"76","messageId":"77","endLine":19,"endColumn":34},{"ruleId":"74","severity":1,"message":"75","line":44,"column":26,"nodeType":"76","messageId":"77","endLine":44,"endColumn":34},{"ruleId":"78","severity":1,"message":"79","line":27,"column":59,"nodeType":"80","messageId":"81","endLine":27,"endColumn":61},{"ruleId":"78","severity":1,"message":"82","line":96,"column":47,"nodeType":"80","messageId":"81","endLine":96,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":139,"column":47,"nodeType":"80","messageId":"81","endLine":139,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":150,"column":50,"nodeType":"80","messageId":"81","endLine":150,"endColumn":52},{"ruleId":"78","severity":1,"message":"82","line":242,"column":47,"nodeType":"80","messageId":"81","endLine":242,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":267,"column":50,"nodeType":"80","messageId":"81","endLine":267,"endColumn":52},{"ruleId":"78","severity":1,"message":"82","line":345,"column":47,"nodeType":"80","messageId":"81","endLine":345,"endColumn":49},{"ruleId":"78","severity":1,"message":"82","line":354,"column":41,"nodeType":"80","messageId":"81","endLine":354,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":18,"column":10,"nodeType":"85","messageId":"86","endLine":18,"endColumn":18},{"ruleId":"78","severity":1,"message":"82","line":128,"column":45,"nodeType":"80","messageId":"81","endLine":128,"endColumn":47},{"ruleId":"78","severity":1,"message":"82","line":168,"column":45,"nodeType":"80","messageId":"81","endLine":168,"endColumn":47},{"ruleId":"78","severity":1,"message":"79","line":174,"column":22,"nodeType":"80","messageId":"81","endLine":174,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":174,"column":41,"nodeType":"80","messageId":"81","endLine":174,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":174,"column":58,"nodeType":"80","messageId":"81","endLine":174,"endColumn":60},{"ruleId":"83","severity":1,"message":"87","line":25,"column":18,"nodeType":"85","messageId":"86","endLine":25,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":25,"column":59,"nodeType":"80","messageId":"81","endLine":25,"endColumn":61},{"ruleId":"78","severity":1,"message":"82","line":52,"column":41,"nodeType":"80","messageId":"81","endLine":52,"endColumn":43},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'setTrip' is assigned a value but never used."]