{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Seth repo share\\\\dotnet-Seth-Repo-1\\\\camping-planner\\\\src\\\\Components\\\\CreateTrip\\\\CreateTrip.js\",\n  _s = $RefreshSig$();\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { TextField, Typography } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { TripsContext } from '../../Contexts/TripsContext';\nimport { useContext } from 'react';\nimport React from 'react';\nimport Divider from '@mui/material/Divider';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateTrip() {\n  _s();\n  const [startDate, setStartDate] = React.useState(dayjs(''));\n  const [endDate, setEndDate] = React.useState(dayjs(''));\n  const [location, setLocation] = useState(\"\");\n\n  //const { trips, setTrips } = useContext(TripsContext);\n  //implement this once you actually create the trip\n\n  const handleStartDateChange = newValue => {\n    setStartDate(newValue);\n  };\n  const handleEndDateChange = newValue => {\n    setEndDate(newValue);\n  };\n  function displayDate() {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      style: {\n        margin: 15\n      },\n      variant: \"h6\",\n      children: [\"Range: \", dayjs(startDate).format('MM/DD/YYYY'), \" to \", dayjs(endDate).format('MM/DD/YYYY')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this);\n  }\n  //I want it to only display the date once an end date has been determined.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 15,\n        marginTop: 15\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        children: \"Select a Date Range-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 15\n      },\n      children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n        label: \"Trip Start Date\",\n        inputFormat: \"MM/DD/YYYY\",\n        value: startDate,\n        onChange: handleStartDateChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: 15\n      },\n      children: /*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n        label: \"Trip End Date\",\n        inputFormat: \"MM/DD/YYYY\",\n        value: endDate,\n        onChange: handleEndDateChange,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n          ...params\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), displayDate(), /*#__PURE__*/_jsxDEV(Divider, {\n      light: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateTrip, \"HFmLuYphO3Tkhv6gDRTUScBO4UM=\");\n_c = CreateTrip;\nvar _c;\n$RefreshReg$(_c, \"CreateTrip\");","map":{"version":3,"names":["DesktopDatePicker","TextField","Typography","dayjs","TripsContext","useContext","React","Divider","useState","CreateTrip","startDate","setStartDate","endDate","setEndDate","location","setLocation","handleStartDateChange","newValue","handleEndDateChange","displayDate","margin","format","marginTop","params"],"sources":["C:/repos/Seth repo share/dotnet-Seth-Repo-1/camping-planner/src/Components/CreateTrip/CreateTrip.js"],"sourcesContent":["import { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\r\nimport { TextField, Typography } from '@mui/material';\r\nimport dayjs from 'dayjs';\r\nimport { TripsContext } from '../../Contexts/TripsContext';\r\nimport { useContext } from 'react';\r\nimport React from 'react';\r\nimport Divider from '@mui/material/Divider';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport default function CreateTrip(){\r\n\r\n    const [startDate, setStartDate] = React.useState(dayjs(''));\r\n    const [endDate, setEndDate] = React.useState(dayjs(''));\r\n    const [location, setLocation] = useState(\"\")\r\n\r\n\r\n    //const { trips, setTrips } = useContext(TripsContext);\r\n    //implement this once you actually create the trip\r\n\r\n    const handleStartDateChange = (newValue) => {\r\n      setStartDate(newValue);\r\n    }\r\n    const handleEndDateChange = (newValue) => {\r\n        setEndDate(newValue);\r\n    }\r\n\r\n    function displayDate(){\r\n\r\n        return(\r\n        <Typography style={{margin:15}} variant=\"h6\">\r\n            Range: {dayjs(startDate).format('MM/DD/YYYY')} to {dayjs(endDate).format('MM/DD/YYYY')}\r\n        </Typography>\r\n        )\r\n    }\r\n    //I want it to only display the date once an end date has been determined.\r\n    return(\r\n        <>\r\n        <div style={{margin:15, marginTop:15}}>\r\n            <Typography variant=\"caption\">Select a Date Range-</Typography>\r\n        </div>\r\n        <div style={{margin:15}}>\r\n            <DesktopDatePicker\r\n            label=\"Trip Start Date\"\r\n            inputFormat=\"MM/DD/YYYY\"\r\n            value={startDate}\r\n            onChange={handleStartDateChange}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            />\r\n        </div>\r\n        <div style={{margin:15}}>\r\n            <DesktopDatePicker\r\n            label=\"Trip End Date\"\r\n            inputFormat=\"MM/DD/YYYY\"\r\n            value={endDate}\r\n            onChange={handleEndDateChange}\r\n            renderInput={(params) => <TextField {...params} />}\r\n            />\r\n        </div> \r\n        {displayDate()}\r\n        <Divider light />\r\n        </>\r\n\r\n    )\r\n\r\n}"],"mappings":";;AAAA,SAASA,iBAAiB,QAAQ,uCAAuC;AACzE,SAASC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACrD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAAA;AAGjC,eAAe,SAASC,UAAU,GAAE;EAAA;EAEhC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,KAAK,CAACE,QAAQ,CAACL,KAAK,CAAC,EAAE,CAAC,CAAC;EAC3D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGP,KAAK,CAACE,QAAQ,CAACL,KAAK,CAAC,EAAE,CAAC,CAAC;EACvD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAG5C;EACA;;EAEA,MAAMQ,qBAAqB,GAAIC,QAAQ,IAAK;IAC1CN,YAAY,CAACM,QAAQ,CAAC;EACxB,CAAC;EACD,MAAMC,mBAAmB,GAAID,QAAQ,IAAK;IACtCJ,UAAU,CAACI,QAAQ,CAAC;EACxB,CAAC;EAED,SAASE,WAAW,GAAE;IAElB,oBACA,QAAC,UAAU;MAAC,KAAK,EAAE;QAACC,MAAM,EAAC;MAAE,CAAE;MAAC,OAAO,EAAC,IAAI;MAAA,WAAC,SAClC,EAACjB,KAAK,CAACO,SAAS,CAAC,CAACW,MAAM,CAAC,YAAY,CAAC,EAAC,MAAI,EAAClB,KAAK,CAACS,OAAO,CAAC,CAACS,MAAM,CAAC,YAAY,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAC7E;EAEjB;EACA;EACA,oBACI;IAAA,wBACA;MAAK,KAAK,EAAE;QAACD,MAAM,EAAC,EAAE;QAAEE,SAAS,EAAC;MAAE,CAAE;MAAA,uBAClC,QAAC,UAAU;QAAC,OAAO,EAAC,SAAS;QAAA,UAAC;MAAoB;QAAA;QAAA;QAAA;MAAA;IAAa;MAAA;MAAA;MAAA;IAAA,QAC7D,eACN;MAAK,KAAK,EAAE;QAACF,MAAM,EAAC;MAAE,CAAE;MAAA,uBACpB,QAAC,iBAAiB;QAClB,KAAK,EAAC,iBAAiB;QACvB,WAAW,EAAC,YAAY;QACxB,KAAK,EAAEV,SAAU;QACjB,QAAQ,EAAEM,qBAAsB;QAChC,WAAW,EAAGO,MAAM,iBAAK,QAAC,SAAS;UAAA,GAAKA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA;IACjD;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAK,KAAK,EAAE;QAACH,MAAM,EAAC;MAAE,CAAE;MAAA,uBACpB,QAAC,iBAAiB;QAClB,KAAK,EAAC,eAAe;QACrB,WAAW,EAAC,YAAY;QACxB,KAAK,EAAER,OAAQ;QACf,QAAQ,EAAEM,mBAAoB;QAC9B,WAAW,EAAGK,MAAM,iBAAK,QAAC,SAAS;UAAA,GAAKA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK;QAAA;QAAA;QAAA;MAAA;IACjD;MAAA;MAAA;MAAA;IAAA,QACA,EACLJ,WAAW,EAAE,eACd,QAAC,OAAO;MAAC,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACd;AAIX;AAAC,GAvDuBV,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}