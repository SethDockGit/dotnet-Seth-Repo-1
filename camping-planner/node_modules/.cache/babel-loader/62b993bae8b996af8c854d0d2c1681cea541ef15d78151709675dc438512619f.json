{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Seth repo share\\\\dotnet-Seth-Repo-1\\\\camping-planner\\\\src\\\\Components\\\\TripsView\\\\TripsView.js\",\n  _s = $RefreshSig$();\nimport { TripsContext } from \"../../Contexts/TripsContext\";\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport { useContext } from \"react\";\nimport { CardActionArea } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TripsView() {\n  _s();\n  //to-do: sort by date\n\n  const {\n    trips\n  } = useContext(TripsContext);\n  const [noUpcoming, setNoUpcoming] = useState(false);\n  const [noPast, setNoPast] = useState(false);\n  const [pastArray, setPastArray] = useState();\n  const [UpcomingArray, setUpcomingArray] = useState();\n  const showUpcomingTrips = () => {\n    var newArray = trips.map(function (val, index) {\n      if (dayjs(val.endDate).isAfter(dayjs())) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none'\n          },\n          underline: \"none\",\n          to: `/trips/${val.id}`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              margin: 4,\n              bgcolor: 'burlywood'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: [val.location, \" ---- \", dayjs(val.startDate).format('MM/DD/YYYY'), \" to \", dayjs(val.endDate).format('MM/DD/YYYY')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      }\n    });\n    setUpcomingArray(newArray);\n    return newArray;\n  };\n  const showPastTrips = () => {\n    var newArray = trips.map(function (val, index) {\n      if (dayjs(val.endDate).isBefore(dayjs())) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          style: {\n            textDecoration: 'none'\n          },\n          underline: \"none\",\n          to: `/trips/${val.id}/past`,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              margin: 4,\n              bgcolor: 'moccasin'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    children: [val.location, \" ---- \", dayjs(val.startDate).format('MM/DD/YYYY'), \" to \", dayjs(val.endDate).format('MM/DD/YYYY')]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this);\n      }\n    });\n    setPastArray(newArray);\n    return newArray;\n  };\n  const checkUpcoming = () => {\n    if (UpcomingArray.length === 0) {\n      setNoUpcoming(true);\n    }\n  };\n  const noUpcomingMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: noUpcoming && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          margin: 4\n        },\n        variant: \"h5\",\n        children: \"No upcoming trips...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  };\n  const checkPast = () => {\n    if (pastArray.length === 0) {\n      setNoPast(true);\n    }\n  };\n  const noPastMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: noPast && /*#__PURE__*/_jsxDEV(Typography, {\n        sx: {\n          margin: 4\n        },\n        variant: \"h5\",\n        children: \"No past trips...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        margin: 4\n      },\n      variant: \"h5\",\n      children: \"Upcoming\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), showUpcomingTrips(), checkUpcoming(), noUpcomingMessage(), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        margin: 4\n      },\n      variant: \"h5\",\n      children: \"Past\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), showPastTrips(), checkPast(), noPastMessage()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(TripsView, \"dfz2EnRbMrOmxLVsmS4YgtWoCEA=\");\n_c = TripsView;\nvar _c;\n$RefreshReg$(_c, \"TripsView\");","map":{"version":3,"names":["TripsContext","Card","CardContent","Typography","useContext","CardActionArea","Link","dayjs","useState","TripsView","trips","noUpcoming","setNoUpcoming","noPast","setNoPast","pastArray","setPastArray","UpcomingArray","setUpcomingArray","showUpcomingTrips","newArray","map","val","index","endDate","isAfter","textDecoration","id","margin","bgcolor","location","startDate","format","showPastTrips","isBefore","checkUpcoming","length","noUpcomingMessage","checkPast","noPastMessage"],"sources":["C:/repos/Seth repo share/dotnet-Seth-Repo-1/camping-planner/src/Components/TripsView/TripsView.js"],"sourcesContent":["import { TripsContext } from \"../../Contexts/TripsContext\";\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport { useContext } from \"react\";\r\nimport { CardActionArea } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport dayjs from \"dayjs\";\r\nimport { useState } from \"react\";\r\n\r\n\r\nexport default function TripsView(){\r\n\r\n    //to-do: sort by date\r\n\r\n    const {trips} = useContext(TripsContext);\r\n    const [noUpcoming, setNoUpcoming] = useState(false);\r\n    const [noPast, setNoPast] = useState(false);\r\n    const [pastArray, setPastArray] = useState();\r\n    const [UpcomingArray, setUpcomingArray] = useState();\r\n\r\n    const showUpcomingTrips = () => {\r\n\r\n        var newArray = trips.map(function(val, index){\r\n\r\n            if(dayjs(val.endDate).isAfter(dayjs())){\r\n\r\n                return(\r\n\r\n                    <Link style={{ textDecoration: 'none' }} underline='none' to={`/trips/${val.id}`} key={index}>\r\n                        <Card sx={{margin:4, bgcolor: 'burlywood'}}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\">\r\n                                        <i>\r\n                                        {val.location} ---- {dayjs(val.startDate).format('MM/DD/YYYY')} to {dayjs(val.endDate).format('MM/DD/YYYY')}\r\n                                        </i>\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Link>\r\n                )\r\n            }})\r\n        \r\n            setUpcomingArray(newArray);\r\n            return newArray;\r\n        \r\n        };\r\n\r\n    const showPastTrips = () => {\r\n\r\n        var newArray = trips.map(function(val, index){\r\n\r\n            if(dayjs(val.endDate).isBefore(dayjs())){\r\n\r\n                return(\r\n\r\n                    <Link style={{ textDecoration: 'none' }} underline='none' to={`/trips/${val.id}/past`} key={index}>\r\n                        <Card sx={{margin:4, bgcolor: 'moccasin'}}>\r\n                            <CardActionArea>\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\">\r\n                                        <i>\r\n                                        {val.location} ---- {dayjs(val.startDate).format('MM/DD/YYYY')} to {dayjs(val.endDate).format('MM/DD/YYYY')}\r\n                                        </i>\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                        </Card>\r\n                    </Link>\r\n                )\r\n            }})\r\n        \r\n            setPastArray(newArray);\r\n            return newArray;\r\n        \r\n        };\r\n\r\n    const checkUpcoming = () => {\r\n        \r\n        if(UpcomingArray.length === 0){\r\n            setNoUpcoming(true);\r\n        }\r\n    }\r\n    const noUpcomingMessage = () => {\r\n        \r\n        return (\r\n            <div>\r\n            {\r\n            noUpcoming &&   \r\n                <Typography sx={{margin:4}} variant=\"h5\">No upcoming trips...</Typography>\r\n            }\r\n            </div>\r\n        )    \r\n    }\r\n    const checkPast = () => {\r\n\r\n        if(pastArray.length === 0){\r\n            setNoPast(true);\r\n        }\r\n    }\r\n    const noPastMessage = () => {\r\n        \r\n        return (\r\n            <div>\r\n            {\r\n            noPast &&   \r\n                <Typography sx={{margin:4}} variant=\"h5\">No past trips...</Typography>\r\n            }\r\n            </div>\r\n        )  \r\n    }\r\n    return(\r\n        <div>\r\n            <Typography sx={{margin:4}} variant=\"h5\">Upcoming</Typography>\r\n            {showUpcomingTrips()}\r\n            {checkUpcoming()}\r\n            {noUpcomingMessage()}\r\n            <Typography sx={{margin:4}} variant=\"h5\">Past</Typography>\r\n            {showPastTrips()}\r\n            {checkPast()}\r\n            {noPastMessage()}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}