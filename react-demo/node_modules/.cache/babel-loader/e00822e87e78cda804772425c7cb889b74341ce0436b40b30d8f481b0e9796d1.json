{"ast":null,"code":"var _jsxFileName = \"C:\\\\repos\\\\Seth repo share\\\\dotnet-Seth-Repo-1\\\\react-demo\\\\src\\\\Components\\\\PeopleTable\\\\PeopleTable.js\",\n  _s = $RefreshSig$();\nimport Typography from '@mui/material/Typography';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PeopleTable(_ref) {\n  _s();\n  let {\n    person\n  } = _ref;\n  const [existingPeople, setExistingPeople] = useState([{\n    firstName: \"Doug\",\n    lastName: \"Marlin\",\n    age: 42\n  }, {\n    firstName: \"Henry\",\n    lastName: \"Rollins\",\n    age: 23\n  }, {\n    firstName: \"Sarah\",\n    lastName: \"Johnson\",\n    age: 4\n  }, {\n    firstName: \"Bart\",\n    lastName: \"Rogarts\",\n    age: 100\n  }, {\n    firstName: \"Gorno\",\n    lastName: \"Deeker\",\n    age: 55\n  }]);\n  if (newPerson !== undefined) {\n    var tempArray = existingPeople;\n    tempArray.push(newPerson);\n    setExistingPeople(tempArray);\n  }\n  var currentPeople = [];\n  const setCurrentPeople = () => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      gutterBottom: true,\n      children: \"The People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          maxWidth: 400\n        },\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'overline',\n                children: \"First Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: 'right',\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'overline',\n                children: \"Last Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: 'right',\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: 'overline',\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: existingPeople.map(function (val, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: val.firstName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: 'right',\n                children: val.lastName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: 'right',\n                children: val.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(PeopleTable, \"V6KEtBTn8A0j+4sdx6DwNemSYxs=\");\n_c = PeopleTable;\nexport default PeopleTable;\nvar _c;\n$RefreshReg$(_c, \"PeopleTable\");","map":{"version":3,"names":["Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useState","PeopleTable","person","existingPeople","setExistingPeople","firstName","lastName","age","newPerson","undefined","tempArray","push","currentPeople","setCurrentPeople","maxWidth","map","val","index"],"sources":["C:/repos/Seth repo share/dotnet-Seth-Repo-1/react-demo/src/Components/PeopleTable/PeopleTable.js"],"sourcesContent":["import Typography from '@mui/material/Typography';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport { useState } from \"react\";\r\n\r\nfunction PeopleTable({person}){\r\n\r\n    const [existingPeople, setExistingPeople] = useState ([\r\n        {\r\n          firstName: \"Doug\",\r\n          lastName: \"Marlin\",\r\n          age: 42,\r\n        },\r\n        {\r\n          firstName: \"Henry\",\r\n          lastName: \"Rollins\",\r\n          age: 23\r\n        },\r\n        {\r\n          firstName: \"Sarah\",\r\n          lastName: \"Johnson\",\r\n          age: 4\r\n        },\r\n        {\r\n          firstName: \"Bart\",\r\n          lastName: \"Rogarts\",\r\n          age: 100\r\n        },\r\n        {\r\n          firstName: \"Gorno\",\r\n          lastName: \"Deeker\",\r\n          age: 55\r\n        },\r\n      ]);\r\n\r\n      if(newPerson !== undefined){\r\n        var tempArray = existingPeople;\r\n\r\n        tempArray.push(newPerson);\r\n\r\n        setExistingPeople(tempArray);\r\n      }\r\n\r\n      var currentPeople = [];\r\n\r\n      const setCurrentPeople = () => {\r\n \r\n      }\r\n\r\n\r\n    return(\r\n\r\n        <>\r\n            <Typography variant=\"h3\" gutterBottom>The People</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table sx={{maxWidth: 400}}>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>\r\n                      <Typography variant={'overline'}>First Name</Typography>\r\n                    </TableCell>\r\n                    <TableCell align={'right'}>\r\n                      <Typography variant={'overline'}>Last Name</Typography>\r\n                    </TableCell>\r\n                    <TableCell align={'right'}>\r\n                      <Typography variant={'overline'}>Age</Typography>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n\r\n                {existingPeople.map(function(val, index){\r\n                  return (\r\n                  <TableRow>\r\n                    <TableCell>{val.firstName}</TableCell>\r\n                    <TableCell align={'right'}>{val.lastName}</TableCell>\r\n                    <TableCell align={'right'}>{val.age}</TableCell>\r\n                  </TableRow>\r\n                  )})}\r\n\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PeopleTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}